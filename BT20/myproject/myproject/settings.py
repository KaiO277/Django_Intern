"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent #


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-6jpwbe7p@0a#7dk_2#$fmvl@193+mbdaizj*8(i(1+y34(axg6'
# SECRET_KEY: Đây là một chuỗi bí mật được sử dụng để bảo mật ứng dụng Django. 
# Đừng chia sẻ hoặc tiết lộ chuỗi này. Nó được sử dụng để bảo vệ phiên làm việc và các mục khác.

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG: Đây là cờ kiểm soát chế độ gỡ lỗi. Khi DEBUG được đặt thành True, dự án sẽ chạy ở chế độ gỡ lỗi, 
# cho phép bạn nhận thông báo lỗi chi tiết. Trong sản xuất, bạn nên đặt DEBUG thành False.

ALLOWED_HOSTS = []
# ALLOWED_HOSTS: Danh sách các máy chủ mà ứng dụng Django có thể phục vụ. Trong sản xuất, bạn cần đặt danh 
# sách này để chỉ cho phép máy chủ cụ thể phục vụ ứng dụng.

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
# INSTALLED_APPS: Danh sách các ứng dụng Django đã được cài đặt trong dự án. Đây bao gồm các ứng dụng tích hợp 
# sẵn như quản trị, xác thực người dùng, quản lý phiên, và nhiều ứng dụng mở rộng khác.

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
# MIDDLEWARE: Danh sách các middleware được sử dụng để xử lý các yêu cầu HTTP trước khi đến các ứng dụng. 
# Middleware có thể thực hiện các nhiệm vụ như bảo mật, quản lý phiên, và nhiều công việc khác.

ROOT_URLCONF = 'myproject.urls'
# ROOT_URLCONF: Đây là tên của tệp URL chính của dự án, thường là 'myproject.urls'. Tệp này xác định các đường dẫn URL cho ứng dụng.

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
# TEMPLATES: Cấu hình cho hệ thống template của Django. Điều này bao gồm các tùy chọn về cách các mẫu được xử lý và cấu hình.

WSGI_APPLICATION = 'myproject.wsgi.application'
# WSGI_APPLICATION: Đường dẫn đến tệp WSGI (Web Server Gateway Interface) của ứng dụng. 
# WSGI là một giao diện tiêu chuẩn giúp Django tương tác với máy chủ web.


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
# DATABASES: Cấu hình cho cơ sở dữ liệu. Mặc định, Django sử dụng cơ sở dữ liệu SQLite,
#  nhưng bạn có thể cấu hình nó để sử dụng các hệ quản lý cơ sở dữ liệu khác.


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
# AUTH_PASSWORD_VALIDATORS: Cấu hình cho các kiểm tra độ mạnh của mật khẩu người dùng.


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
# LANGUAGE_CODE: Ngôn ngữ mặc định cho ứng dụng. Ví dụ, 'en-us' đại diện cho tiếng Anh (Hoa Kỳ).

TIME_ZONE = 'UTC'
# TIME_ZONE: Múi giờ mặc định của ứng dụng.

USE_I18N = True
# USE_I18N và USE_TZ: Điều này cho biết liệu ứng dụng sử dụng tích hợp quốc tế hóa (i18n) và múi giờ (tz).

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
# STATIC_URL: Định nghĩa URL mặc định để truy cập tài nguyên tĩnh như CSS, JavaScript và hình ảnh.

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# DEFAULT_AUTO_FIELD: Loại trường khóa chính mặc định cho các mô hình. Trong Django 4.2, mặc định là BigAutoField.
